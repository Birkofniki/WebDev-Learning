
..////////// CSS Transitions .../////////////////////////
- CSS transitions allow you to change from one property value to another over a given duration. 
- Transition effects can be applied to a wide variety of CSS properties, 
  including background-color, width, height, opacity, and many more. 

  ..//////////. A transition changes the specified property:  ...///////////////////////// 
    duration
    type
    value=====

  ..//////////. The Transition Property   ...///////////////////////// 
  - In the example below, the div element has width and height of 50px, with a green background. 
  - We specified a transition effect for the width property, with a duration of 3 seconds:
  -  The CSS will look like this:
    CODE: 
        The .html file: 
            <div></div>
        The .css file:
            div {
                width: 50px;
                height: 50px;
                background: #32CD32;
                transition: width 3s;
            }
            div:hover {
                width: 250px;
            }
    Click to run:
  - If you hover over the div element, it will start to change its width.
  - When the cursor is moused out of the element, it will gradually change back to its original style.

  ..//////////. Add a transition property that changes the background color in 5 seconds. ...///////////////////////// 
  transition: background-color 5s;


  ..//////////. transition-timing-function  ...///////////////////////// 
  -  The transition-timing-function property specifies the speed curve of the transition effect.
  -  It can have the following values:
        ease - the animation starts slowly, then accelerates quickly.
        ease-in - starts slowly, then accelerates, and stops abruptly.        
        ease-out - starts quickly, but decelerates to a stop.        
        ease-in-out - similar to ease, but with more subtle acceleration and deceleration.        
        linear - constant speed throughout the animation; often best for color or opacity changes.
  
  For example: 
        CODE PLAYGROUND: CSS
        transition-timing-function: ease-in; 

    THE EXACT CODE: 
        The .html file: 
            <div></div>
        The .css file: 
            div {
                width: 50px;
                height: 50px;
                background: #32CD32;
                transition: width 3s;
                transition-timing-function: ease-in;
            }
            div:hover {
                width: 250px;
            }

  Click to run
  - Run the code and hover the div to see the result.
  - If no timing function is specified, the default value is ease.


  ..//////////. The default transition timing function is: ...///////////////////////// 
    linear
    ease-out
    ease====
    ease-in


  ..//////////. transition-timing-function ...///////////////////////// 
-  The transition timing function can also be specified in the transition property, like this:
  CODE PLAYGROUND: CSS
  transition: width 3s ease-in; 

    THE EXACT CODE: 
        The .html file: 
                <div></div>
        The .css file: 
                div {
                    width: 50px;
                    height: 50px;
                    background: #32CD32;
                    transition: width 3s ease-in;
                }
                div:hover {
                    width: 250px;
                }
        Click to run

  ..//////////.  Fill in the blanks to declare a transition on the height property, with the duration of 5 seconds
                 using the ease-out function. ...///////////////////////// 
         ANSWER: 
            transition  : height 5s   ease-out;


  ..//////////. Transitions  ...///////////////////////// 
  -  We can add a transition on a transform property!
  -  Let's make our div rotate when the its hovered:
   CODE PLAYGROUND: CSS
        div {
            ...
            transition: transform 1s ease-in-out; 
        }
        div:hover {
            transform: rotate(90deg);
        }  

    ...THE EXACT CODE: ........................................
        The .html code: 
            <div></div>
        The .css code: 
            div {
                width: 200px;
                height: 200px;
                margin: 50px 0 0 50px;
                background-color: #8BC34A;
                transition: transform 1s ease-in-out; 
            }
            div:hover {
                transform: rotate(90deg);
            }
        Click to run
  - We specify the transform to rotate the div by 90 degrees, and then declare the transition on our transform property.

  ..//////////. Drag & drop to specify a transition on the transform property for the element with id "box". 
  The transform should scale the element by the factor of 1.5 when hovered. ...///////////////////////// 
    CODE:
        #box {
            transition: transform  1s ease-in;
            }
        #box:hover:
            {
            transform: scale (1.5, 1.5);
            }


  ..//////////. THE START OF PRACTICE...///////////////////////// 
            Image Transition 
            - Let's make the profile image scale using a transition when hovered.
            Task:
            1. Add a transform transition for our image element in the summary section which uses the 
            ease function and has a duration of 1 second.
            
            2. For the :hover state, add a scale transform with the factor of 1.3.
            
            CSS Example: 
            .summary img {
                float: right;
                transition: transform 1s ease; 
            }
            .summary img:hover {
                transform: scale(1.3);
            } 
            CSS
            Hover the image in the result to see the transition in action!

  ..//////////.  THE END OF PRACTICE...///////////////////////// 


  ..//////////. QUIZ:True or False: A transition can be applied on a transform.:  ...///////////////////////// 
    False
    True =====
 ..//////////.  THE END...///////////////////////// 